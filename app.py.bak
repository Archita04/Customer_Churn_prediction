from flask import Flask, request, render_template
import xgboost as xgb
import json
import sklearn

app = Flask(__name__)

# Load the XGBoost model
XGB1_1 = xgb.XGBClassifier()
XGB1_1.load_model('xgboost_model.model')

# Load hyperparameters
with open('xgboost_hyperparameters.json', 'r') as file:
    hyperparameters = json.load(file)


@app.route('/')
def home():
    return render_template('home.html', prediction=None)

@app.route('/', methods=['POST'])
def predict():
    feature1 = float(request.form['feature1'])
    feature2 = float(request.form['feature2'])
    feature3 = float(request.form['feature3'])
    feature4 = float(request.form['feature4'])
    feature5 = float(request.form['feature5'])
    feature6 = float(request.form['feature6'])
    
    # Make predictions using the loaded model
    prediction = XGB1_1.predict([[feature1, feature2,feature3,feature4,feature5,feature6]])
    probablity = XGB1_1.predict_proba([[feature1, feature2,feature3,feature4,feature5,feature6]])[:,1]

    if prediction==1:
        res = "The customer is churned"
        "Confidence: {}".format(probablity*100)
    else:
        res = "the Customer is not churned"

    return render_template('home.html', prediction=res)

if __name__ == '__main__':
    app.run(debug=True)
